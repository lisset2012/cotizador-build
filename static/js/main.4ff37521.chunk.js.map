{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","helper.js","componentes/Resultado.js","componentes/Resumen.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Formulario","marcaRef","React","createRef","yearRef","planBasicoRef","planCompletoRef","cotizarSeguro","e","preventDefault","plan","_this","current","checked","console","log","value","infoAuto","marca","year","currentTarget","reset","onSubmit","this","name","ref","type","Component","primeraMayuscula","texto","charAt","toUpperCase","slice","Resultado","resultado","mensaje","react_transition_group","component","classNames","key","timeout","enter","exit","Resumen","mostrarResumen","_this$props$datos","datos","componentes_Resultado","App","state","Date","getFullYear","obtenerDiferenciaAnio","modelo","incremento","calcularMarca","incrementoPlan","obtenerPlan","parseFloat","toFixed","datosAuto","setState","componentes_Header","componentes_Formulario","componentes_Resumen","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ff37521.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props => {\r\n    return(\r\n        <header className='top'>\r\n            <h1>\r\n                {props.titulo}\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass Formulario extends Component{\r\n    //refs son para leer los valores de los campos de los formularios\r\n\r\n    marcaRef = React.createRef();\r\n    yearRef = React.createRef();\r\n    planBasicoRef = React.createRef();\r\n    planCompletoRef = React.createRef();\r\n\r\n    cotizarSeguro = (e) => {\r\n        e.preventDefault();\r\n\r\n        //leer el plan\r\n\r\n        const plan = this.planBasicoRef.current.checked ? 'basico' : 'completo';\r\n        \r\n        //1. obtener datos\r\n\r\n        console.log(this.planBasicoRef.current.value);\r\n\r\n        //2. crear el objeto\r\n\r\n        const infoAuto = {\r\n            marca: this.marcaRef.current.value,\r\n            year: this.yearRef.current.value,\r\n            plan: plan\r\n        }\r\n\r\n        console.log(infoAuto);\r\n\r\n        //3. enviar datos al componente principal con props\r\n\r\n        this.props.cotizarSeguro(infoAuto);\r\n\r\n        //resetear el formulario\r\n\r\n        e.currentTarget.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"cotizar-auto\" onSubmit={this.cotizarSeguro}>\r\n                <div className=\"campo\">\r\n                    <label>Marca</label>\r\n                    <select name=\"marca\" ref={this.marcaRef}>\r\n                        <option value=\"americano\">Americano</option>\r\n                        <option value=\"europeo\">Europeo</option>\r\n                        <option value=\"asiatico\">Asiatico</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div className=\"campo\">\r\n                    <label>Año</label>\r\n                    <select name=\"year\" ref={this.yearRef}>\r\n                        <option value=\"2018\">2018</option>\r\n                        <option value=\"2017\">2017</option>\r\n                        <option value=\"2016\">2016</option>\r\n                        <option value=\"2015\">2015</option>\r\n                        <option value=\"2014\">2014</option>\r\n                        <option value=\"2013\">2013</option>\r\n                        <option value=\"2012\">2012</option>\r\n                        <option value=\"2011\">2011</option>\r\n                        <option value=\"2010\">2010</option>\r\n                        <option value=\"2009\">2009</option>\r\n                        <option value=\"2008\">2008</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"campo\">\r\n                    <label>Plan:</label>\r\n                    <input type=\"radio\" name=\"plan\" value=\"basico\" ref={this.planBasicoRef}/> Básico\r\n                    <input type=\"radio\" name=\"plan\" value=\"completo\" ref={this.planCompletoRef}/> Completo\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"boton\">Cotizar</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Formulario;  ","\r\nexport function obtenerDiferenciaAnio(year) {\r\n    return new Date().getFullYear() - year;\r\n }\r\n \r\n export function calcularMarca( modelo ) {\r\n     let incremento;\r\n \r\n     switch (modelo) {\r\n         case 'europeo':\r\n             incremento = 1.30;\r\n             break;\r\n         case 'americano':\r\n             incremento = 1.15;\r\n             break;\r\n         case 'asiatico':\r\n             incremento = 1.05;\r\n             break;\r\n         default:\r\n             break;\r\n     }\r\n \r\n     return incremento;\r\n }\r\n export function obtenerPlan( plan ) {\r\n     return (plan === 'basico') ? 1.20 : 1.50;\r\n }\r\n export function primeraMayuscula(texto) {\r\n     return texto.charAt(0).toUpperCase() + texto.slice(1);\r\n }","import React, {Component} from 'react';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass Resultado extends Component{\r\n    render(){\r\n        const resultado = this.props.resultado;\r\n        const mensaje = (!resultado) ? 'Elije Marca, Ano y Tipo de Seguro' : 'El total es: $';\r\n        return(\r\n            <div className=\"gran-total\">\r\n                {mensaje}\r\n                <TransitionGroup component=\"span\" className=\"resultado\">\r\n                    <CSSTransition \r\n                        classNames=\"resultado\" \r\n                        key={resultado}\r\n                        timeout={{enter:500, exit:500}}>\r\n                        <span>{resultado}</span>\r\n\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resultado;","import React, {Component} from 'react';\r\nimport {primeraMayuscula} from '../helper';\r\nimport Resultado from './Resultado';\r\n\r\nclass Resumen extends Component {\r\n\r\n    mostrarResumen = () =>{\r\n        const {marca, year, plan} = this.props.datos;\r\n\r\n        if(!marca || !year || !plan) return null;\r\n        \r\n        return(\r\n            <div className='resumen'>\r\n                <h2>Resumen de cotizacion</h2>\r\n                <li>Marca: {primeraMayuscula(marca)}</li>\r\n                <li>Plan: {primeraMayuscula(plan)}</li>\r\n                <li>Ano del auto: {year}</li>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                {this.mostrarResumen()}\r\n                <Resultado \r\n                    resultado = {this.props.resultado}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Resumen;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport {obtenerDiferenciaAnio, calcularMarca, obtenerPlan} from '../helper';\nimport Resumen from './Resumen';\n\nclass App extends Component {\n\n  state ={\n    resultado: '',\n    datos: {}\n  }\n\n  cotizarSeguro = (datos) => {\n      const {marca, year, plan} = datos;\n\n      //agregar una base\n      let resultado = 2000;\n\n      //obtener la dif de anos\n      const diferencia = obtenerDiferenciaAnio(year);\n\n      // por cada ano menor que 2018 resta 3% al valor del seguro\n      resultado -= ((diferencia*3)*resultado)/100;\n\n      //americano 15% asiatico 5% europeo 30% de incremento al valor actual\n      resultado = calcularMarca(marca) * resultado;\n\n      //el plan del ano, el basico incrementa el valor 20% y cobertura completa 50%\n      let incrementoPlan = obtenerPlan(plan);\n\n      // dependiendo del plan incremento\n      resultado = parseFloat(incrementoPlan * resultado).toFixed(2);\n\n      //crear objeto para el resumen\n      const datosAuto = {\n        marca: marca,\n        plan: plan,\n        year: year\n      }\n\n      //ya tenemos el costo\n      console.log(resultado);\n      this.setState({\n        resultado: resultado,\n        datos: datosAuto\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor\">\n        <Header \n          titulo=\"Cotizador de Seguro de Autos\"\n        />\n         <div className=\"contenedor-formulario\">\n          <Formulario \n            cotizarSeguro = {this.cotizarSeguro}\n          />\n        </div>\n        <div>\n          <Resumen \n            datos = {this.state.datos}\n            resultado = {this.state.resultado}\n          />\n        </div>\n        \n      </div>\n     \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}